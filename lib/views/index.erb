<!DOCTYPE html>
<html>
 <head>
  <meta charset="UTF-8"></meta>
  <title>Poefy Online</title>
  <script src="https://tilde.town/~nossidge/jquery/src/jquery.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
  <link href="https://tilde.town/~nossidge/zelda/holy_grail.css" rel="stylesheet">
  <script language="javascript">

    var desc_databases = <%= @desc_databases %>;

    // Get the poem from the JSON request.
    function getPoem() {
      let corpus   = document.getElementById("dropdown_databases").value;
      let form     = document.getElementById("dropdown_poetic_forms").value;
      let rhyme    = document.getElementById("text_rhyme").value;
      let indent   = document.getElementById("text_indent").value;
      let syllable = document.getElementById("text_syllable").value;
      let regex    = document.getElementById("text_regex").value;
      let acrostic = document.getElementById("text_acrostic").value;

      // Create options object.
      let options = {};
      options.corpus = corpus;

      // If we aren't using the form, we are using the rhyme string.
      let use_form = $("#poetic_form").hasClass("active");
      if (use_form) {
        options.form = form;
      } else {
        options.rhyme = rhyme;
      }

      // Add optional attributes.
      if (indent   != "") options.indent   = indent;
      if (syllable != "") options.syllable = syllable;
      if (regex    != "") options.regex    = regex;
      if (acrostic != "") options.acrostic = acrostic;

      // Serialise the object to URL parameters.
      // Write response to the main div.
      $.getJSON("poem?" + $.param(options), function(data) {
        if (data.length != 0) {
          let poem = data.join("<br>").replace(/ /g, "&nbsp;");
          $("#poem_results").html(poem);
        } else {
          $("#poem_results").html("[A poem cannot be generated using the selected criteria]");
        }
      });
    }

    // Display the corpus description.
    function selectDatabase(database) {
      document.getElementById("dropdown_databases").value = database;
      $("#database_desc").text(desc_databases[database]);
      getPoem();
    }

    // Toggle between named form and bespoke rhyme string.
    function togglePoemType() {
      $("#poetic_form").toggleClass("active");
      $("#poetic_form_glyphicon").toggleClass("glyphicon-ok");
      $("#poetic_form_glyphicon").toggleClass("glyphicon-remove");
      $("#rhyme").toggleClass("active");
      $("#rhyme_glyphicon").toggleClass("glyphicon-ok");
      $("#rhyme_glyphicon").toggleClass("glyphicon-remove");
    }
    function setPoemTypePoeticForm() {
      if ( !$("#poetic_form").hasClass("active") ) togglePoemType();
    }
    function setPoemTypeRhyme() {
      if ( !$("#rhyme").hasClass("active") ) togglePoemType();
    }

    // Onload, select 'shakespeare' and 'sonnet'.
    // Set up listeners for the toggle-able inputs.
    $(document).ready(function() {
      let elem = document.getElementById("dropdown_databases");
      elem.value = "shakespeare";
      $("#database_desc").text(desc_databases[elem.value]);
      document.getElementById("dropdown_poetic_forms").value = "sonnet";
      $("#dropdown_poetic_forms").focus(setPoemTypePoeticForm);
      $("#text_rhyme").focus(setPoemTypeRhyme);
    });
  </script>
  <style type="text/css">
    body {
      min-height: 100vh;
    }
    input {
      text-align: left;
    }
    .header_div {
      margin: 10px;
    }
    .header_left {
      flex: 0 0 256px;
      margin-top: 0px;
      margin-left: 0px;
    }
    .header_right {
      flex: 0 0 44px;
      margin-left: 8px;
      margin-right: 0px;
    }
    .top_button {
      width: 100px;
    }
    .col_left {
      flex: 0 0 20em;
      min-height: 358px;
    }
    .col_middle {
      background-color: white;
      padding: 0px;
    }
    #save {
      margin: 0px 0px 5px 0px;
    }
    .btn_tags {
      height: 44px;
    }
    #poem_results {
      font-size: 120%;
      margin: 12px;
    }
    #database_desc{
      font-size: 200%;
    }
    .header_title {
      text-align: left;
      margin-top: 4px;
      margin-left: 24px;
    }
    .poem_option p {
      float: left;
    }
    .tiny_hover_buttons {
      float: right;
    }

    /*
    Hover effect nabbed from here (class is 'the-icons')
    http://www.plugolabs.com/twitter-bootstrap-button-generator/
    */
    .tiny_hover_buttons a {
      text-decoration: none;
      color: black;
      width: 20px;
      height: 20px;
      padding: 0px 0px 0px 6px;
      float: left;
      -moz-transition: all 0.15s ease-in-out;
      -webkit-transition: all 0.15s ease-in-out;
      -o-transition: all 0.15s ease-in-out;
      transition: all 0.15s ease-in-out;
    }
    .tiny_hover_buttons a:hover, .tiny_hover_buttons a.active {
      -webkit-box-shadow:
        0 0 3px #c8c8c8,
        transparent 0 0 0,
        transparent 0 0 0,
        transparent 0 0 0,
        transparent 0 0 0;
      -moz-box-shadow:
        0 0 3px #c8c8c8,
        transparent 0 0 0,
        transparent 0 0 0,
        transparent 0 0 0,
        transparent 0 0 0;
      box-shadow:
        0 0 3px #c8c8c8,
        transparent 0 0 0,
        transparent 0 0 0,
        transparent 0 0 0,
        transparent 0 0 0;
      background: #fff;
    }
  </style>
 </head>
 <body class="border">
  <header class="border">
    <div class="header_div">
      <div class="header_title input-group-lg">
        <span id="database_desc"></span>
      </div>
      <div class="header_left">
        <select id="dropdown_databases" class="form-control input-lg"
                onchange="selectDatabase(this.value)">
          <% @all_databases.each do |i| %>
            <option value="<%= i %>"><%= i %></option>
          <% end %>
        </select>
      </div>
      <div class="header_right">
        <a class="btn btn-default btn-lg" title="Fork me on GitHub"
            href="https://github.com/nossidge/poefy_online">
          <svg viewBox="0 0 16 15" width="22" height="18">
            <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/>
          </svg>
        </a>
      </div>
    </div>
  </header>
  <div class="contents">
    <div id="col_left" class="col_left border">
      <div id="col_left_content">
        <a class="btn btn-default btn-lg btn-block btn_tags"
            title="Generate new poem" onclick="getPoem()">
          <span id="save_glyphicon" class="glyphicon glyphicon-refresh"></span>
        </a>
        <br>
        <p>Poetic form</p>
        <div class="input-group">
          <a id="poetic_form" title="Toggle" onclick="togglePoemType();"
              class="input-group-addon btn btn-default btn-lg btn-block btn_tags active">
            <span id="poetic_form_glyphicon" class="glyphicon glyphicon-ok"></span>
          </a>
          <select id="dropdown_poetic_forms" class="form-control input-lg"
                  onchange="getPoem()">
            <% @poetic_forms.each do |i| %>
              <option value="<%= i %>"><%= i %></option>
            <% end %>
          </select>
        </div>
        <br>
        <p>Rhyme scheme</p>
        <div class="input-group">
          <a id="rhyme" title="Toggle" onclick="togglePoemType();"
              class="input-group-addon btn btn-default btn-lg btn-block btn_tags">
            <span id="rhyme_glyphicon" class="glyphicon glyphicon-remove"></span>
          </a>
          <input id="text_rhyme" type="text" class="form-control input-lg" />
        </div>
        <br>
        <div class="poem_option">
          <p>Indentation</p>
          <span class="tiny_hover_buttons">
            <a href="#" title="Randomise">!</a>
            <a href="#" title="Display help">?</a>
          </span>
          <div class="btn-block">
            <input id="text_indent" type="text" class="form-control input-lg" />
          </div>
        </div>
        <br>
        <p>Syllables</p>
        <div class="btn-block">
          <input id="text_syllable" type="text" class="form-control input-lg" />
        </div>
        <br>
        <p>Regex</p>
        <div class="btn-block">
          <input id="text_regex" type="text" class="form-control input-lg" />
        </div>
        <br>
        <p>Acrostic</p>
        <div class="btn-block">
          <input id="text_acrostic" type="text" class="form-control input-lg" />
        </div>
      </div>
    </div>
    <div id="col_middle" class="col_middle border" name="poem_frame">
      <div id="poem_results">
        <p>Welcome to the online <a href="https://github.com/nossidge/poefy">Poefy</a> generator.</p>
        <p>Select the corpus database at the top.</p>
        <p>Then choose from the options on the left.</p>
        <p>For a new poem, click the 'refresh' button.</p>
        <br>
        <p>Project currently <a href="https://github.com/nossidge/poefy_online">in progress</a>.</p>
        <p>Most features are not yet implemented.</p>
      </div>
    </div>
  </div>
 </body>
</html>
